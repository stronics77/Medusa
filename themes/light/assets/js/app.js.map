{"version":3,"sources":["webpack:///./src/app.js"],"names":["__webpack_require__","r","__webpack_exports__","vue__WEBPACK_IMPORTED_MODULE_0__","vuex__WEBPACK_IMPORTED_MODULE_1__","vue_router__WEBPACK_IMPORTED_MODULE_2__","vue_async_computed__WEBPACK_IMPORTED_MODULE_3__","vue_snotify__WEBPACK_IMPORTED_MODULE_4__","_store__WEBPACK_IMPORTED_MODULE_5__","_router__WEBPACK_IMPORTED_MODULE_6__","_utils__WEBPACK_IMPORTED_MODULE_7__","_components__WEBPACK_IMPORTED_MODULE_8__","Vue","config","devtools","performance","use","Vuex","VueRouter","AsyncComputed","Snotify","window","components","forEach","component","isDevelopment","console","debug","concat","name","AnidbReleaseGroupUi","AppHeader","AppLink","Asset","Backstretch","Config","FileBrowser","LanguageSelect","NamePattern","PlotInfo","RootDirs","ScrollButtons","SelectList","Show","ShowSelector","app","store","router","data","globalLoading","pageComponent","computed","Object","assign","mapState","mounted","log","document","location","pathname","includes","$store","this","dispatch","username","$mount"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,GA0BAY,IAAIC,OAAOC,UAAW,EACtBF,IAAIC,OAAOE,aAAc,EAEzBH,IAAII,IAAIC,KACRL,IAAII,IAAIE,KACRN,IAAII,IAAIG,KACRP,IAAII,IAAII,KAGRC,OAAOC,WAAWC,QAAQ,SAAAC,GAClBC,KACAC,QAAQC,MAAR,eAAAC,OAA6BJ,EAAUK,OAE3CjB,IAAIY,UAAUA,EAAUK,KAAML,KAIT,CACrBM,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGarB,QAAQ,SAAAC,GACrBZ,IAAIY,UAAUA,EAAUK,KAAML,KAGlC,IAAMqB,EAAM,IAAIjC,IAAI,CAChBiB,KAAM,MACNiB,UACAC,WACAzB,WAAY,GAEZ0B,KANgB,WAOZ,MAAO,CACHC,eAAe,EACfC,eAAe,IAGvBC,SAAUC,OAAOC,OAAOC,YAAS,CAAC,OAAQ,WAAY,IACtDC,QAbgB,WAkBZ,GAJI9B,KACAC,QAAQ8B,IAAI,iBAGXC,SAASC,SAASC,SAASC,SAAS,UAAW,KACxCC,EAAWC,KAAXD,OACRA,EAAOE,SAAS,QAAS,CAAEC,SAAU3C,OAAO2C,WAC5CH,EAAOE,SAAS,aAEZtC,KACAC,QAAQ8B,IAAI,mBAIzBS,OAAO,aAEKpB","file":"js/app.js","sourcesContent":["import Vue from 'vue';\nimport Vuex, { mapState } from 'vuex';\nimport VueRouter from 'vue-router';\nimport AsyncComputed from 'vue-async-computed';\nimport Snotify from 'vue-snotify';\nimport store from './store';\nimport router from './router';\nimport { isDevelopment } from './utils';\nimport {\n    AnidbReleaseGroupUi,\n    AppHeader,\n    AppLink,\n    Asset,\n    Backstretch,\n    Config,\n    FileBrowser,\n    LanguageSelect,\n    NamePattern,\n    PlotInfo,\n    RootDirs,\n    ScrollButtons,\n    SelectList,\n    Show,\n    ShowSelector\n} from './components';\n\nVue.config.devtools = true;\nVue.config.performance = true;\n\nVue.use(Vuex);\nVue.use(VueRouter);\nVue.use(AsyncComputed);\nVue.use(Snotify);\n\n// Load x-template components\nwindow.components.forEach(component => {\n    if (isDevelopment) {\n        console.debug(`Registering ${component.name}`);\n    }\n    Vue.component(component.name, component);\n});\n\n// Global components\nconst globalComponents = [\n    AnidbReleaseGroupUi,\n    AppHeader,\n    AppLink,\n    Asset,\n    Backstretch,\n    Config,\n    FileBrowser,\n    LanguageSelect,\n    NamePattern,\n    PlotInfo,\n    RootDirs,\n    ScrollButtons,\n    SelectList,\n    Show,\n    ShowSelector\n];\n\nglobalComponents.forEach(component => {\n    Vue.component(component.name, component);\n});\n\nconst app = new Vue({\n    name: 'App',\n    store,\n    router,\n    components: {\n    },\n    data() {\n        return {\n            globalLoading: false,\n            pageComponent: false\n        };\n    },\n    computed: Object.assign(mapState(['auth', 'config']), {}),\n    mounted() {\n        if (isDevelopment) {\n            console.log('App Mounted!');\n        }\n\n        if (!document.location.pathname.includes('/login')) {\n            const { $store } = this;\n            $store.dispatch('login', { username: window.username });\n            $store.dispatch('getConfig');\n\n            if (isDevelopment) {\n                console.log('App Loaded!');\n            }\n        }\n    }\n}).$mount('#vue-wrap');\n\nexport default app;\n"],"sourceRoot":""}